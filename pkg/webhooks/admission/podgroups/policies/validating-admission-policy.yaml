apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  name: podgroup-validation-policy
  labels:
    volcano.sh/component: podgroup-webhook
    volcano.sh/migration: vap
    volcano.sh/note: "Simplified validation - queue state checks require external validation"
spec:
  failurePolicy: Fail
  matchConstraints:
  - resourceRules:
    - operations: ["CREATE", "UPDATE"]
      apiGroups: ["scheduling.volcano.sh"]
      apiVersions: ["v1beta1"]
      resources: ["podgroups"]
  validations:
  # 1. MinMember Validation - Must be positive
  - expression: "!has(object.spec.minMember) || object.spec.minMember > 0"
    message: "PodGroup minMember must be greater than 0"
    reason: Invalid
  
  # 2. MaxMember Validation - Must be >= MinMember
  - expression: |
      !has(object.spec.maxMember) || 
      !has(object.spec.minMember) ||
      object.spec.maxMember >= object.spec.minMember
    message: "PodGroup maxMember must be greater than or equal to minMember"
    reason: Invalid
  
  # 3. Queue Name Format Validation
  - expression: |
      !has(object.spec.queue) || 
      (size(object.spec.queue) > 0 && 
       object.spec.queue.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'))
    message: "Queue name must be a valid Kubernetes name (lowercase alphanumeric with hyphens)"
    reason: Invalid
  
  # 4. Priority Validation
  - expression: |
      !has(object.spec.priority) || 
      (object.spec.priority >= -2147483648 && object.spec.priority <= 2147483647)
    message: "Priority must be a valid 32-bit integer"
    reason: Invalid
  
  # 5. PriorityClassName Format Validation
  - expression: |
      !has(object.spec.priorityClassName) || 
      (size(object.spec.priorityClassName) > 0 && 
       object.spec.priorityClassName.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'))
    message: "PriorityClassName must be a valid Kubernetes name"
    reason: Invalid
  
  # 6. Name and Namespace Validation
  - expression: |
      has(object.metadata.name) && size(object.metadata.name) > 0 &&
      has(object.metadata.namespace) && size(object.metadata.namespace) > 0
    message: "PodGroup must have non-empty name and namespace"
    reason: Invalid
  
  # 7. Basic Resource Request Validation
  - expression: |
      !has(object.spec.minResources) ||
      !has(object.spec.minResources.requests) ||
      object.spec.minResources.requests.all(resource, 
        resource.value().matches('^[0-9]+(\\.[0-9]*)?[mMkKGTPEi]*$')
      )
    message: "Resource requests must be valid Kubernetes resource quantities"
    reason: Invalid
  
  # Note: Queue state validation (queue existence and open state) cannot be 
  # implemented in CEL due to lack of external API access.
  # This validation should be moved to:
  # 1. A separate controller-based validation system
  # 2. OPA Gatekeeper with external data providers
  # 3. A simplified webhook that only handles queue state validation

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: podgroup-validation-policy-binding
  labels:
    volcano.sh/component: podgroup-webhook
    volcano.sh/migration: vap
spec:
  policyName: podgroup-validation-policy
  validationActions: [Warn] # Start with Warn for gradual migration
  matchResources:
    namespaceSelector:
      matchExpressions:
      - key: name
        operator: NotIn
        values: ["kube-system", "kube-public", "kube-node-lease"]