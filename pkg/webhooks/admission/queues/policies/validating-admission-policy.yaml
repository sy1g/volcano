apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  name: queue-validation-policy
  labels:
    volcano.sh/component: queue-webhook
    volcano.sh/migration: vap
    volcano.sh/note: "Simplified validation - hierarchical validation requires external API access"
spec:
  failurePolicy: Fail
  matchConstraints:
  - resourceRules:
    - operations: ["CREATE", "UPDATE"]
      apiGroups: ["scheduling.volcano.sh"]
      apiVersions: ["v1beta1"]
      resources: ["queues"]
  variables:
  - name: hasHierarchy
    expression: |
      has(object.metadata.annotations) &&
      has(object.metadata.annotations['scheduling.volcano.sh/hierarchy'])
  - name: hasHierarchyWeights
    expression: |
      has(object.metadata.annotations) &&
      has(object.metadata.annotations['scheduling.volcano.sh/hierarchy-weights'])
  - name: hierarchyPath
    expression: |
      variables.hasHierarchy ? 
      object.metadata.annotations['scheduling.volcano.sh/hierarchy'] : ""
  - name: hierarchyWeights
    expression: |
      variables.hasHierarchyWeights ? 
      object.metadata.annotations['scheduling.volcano.sh/hierarchy-weights'] : ""
  validations:
  # 1. Basic Field Validations
  - expression: "!has(object.spec.weight) || object.spec.weight > 0"
    message: "Queue weight must be greater than 0"
    reason: Invalid
  
  # 2. State Validation
  - expression: |
      !has(object.spec.state) || 
      object.spec.state in ['Open', 'Closed', 'Closing', 'Unknown']
    message: "Queue state must be one of: Open, Closed, Closing, Unknown"
    reason: Invalid
  
  # 3. Queue Name Validation
  - expression: |
      has(object.metadata.name) && 
      size(object.metadata.name) > 0 &&
      object.metadata.name.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
    message: "Queue name must be a valid Kubernetes name (lowercase alphanumeric with hyphens)"
    reason: Invalid
  
  # 4. System Queue Protection
  - expression: |
      object.metadata.name != "default" && object.metadata.name != "root"
    message: "System queues 'default' and 'root' cannot be modified"
    reason: Invalid
    
  # 5. Hierarchy Format Validation
  - expression: |
      !variables.hasHierarchy ||
      variables.hierarchyPath.matches('^[a-z0-9]([-a-z0-9/]*[a-z0-9])?$')
    message: "Hierarchy path must contain valid Kubernetes names separated by '/'"
    reason: Invalid
  
  # 6. Hierarchy-Weights Length Matching
  - expression: |
      !variables.hasHierarchy || !variables.hasHierarchyWeights ||
      size(variables.hierarchyPath.split('/')) == size(variables.hierarchyWeights.split('/'))
    message: "Hierarchy path and weights must have the same number of components"
    reason: Invalid
  
  # 7. Hierarchy Weights Format Validation
  - expression: |
      !variables.hasHierarchyWeights ||
      variables.hierarchyWeights.split('/').all(weight, weight.matches('^[1-9][0-9]*$'))
    message: "Hierarchy weights must be positive integers"
    reason: Invalid
  
  # 8. Resource Guarantee Format Validation
  - expression: |
      !has(object.spec.guarantee) ||
      object.spec.guarantee.all(resource, 
        resource.value().matches('^[0-9]+(\\.[0-9]*)?[mMkKGTPEi]*$')
      )
    message: "Resource guarantee values must be valid Kubernetes resource quantities"
    reason: Invalid
  
  # 9. Resource Capability Format Validation
  - expression: |
      !has(object.spec.capability) ||
      object.spec.capability.all(resource, 
        resource.value().matches('^[0-9]+(\\.[0-9]*)?[mMkKGTPEi]*$')
      )
    message: "Resource capability values must be valid Kubernetes resource quantities"
    reason: Invalid
  
  # 10. Hierarchy Consistency (both hierarchy and weights required together)
  - expression: |
      (variables.hasHierarchy && variables.hasHierarchyWeights) ||
      (!variables.hasHierarchy && !variables.hasHierarchyWeights)
    message: "Both hierarchy and hierarchy-weights annotations must be specified together"
    reason: Invalid
  
  # 11. Parent Queue Name Format Validation
  - expression: |
      !has(object.spec.parent) ||
      object.spec.parent == "" ||
      object.spec.parent.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
    message: "Parent queue name must be a valid Kubernetes name"
    reason: Invalid
  
  # 12. Self-Parent Prevention
  - expression: |
      !has(object.spec.parent) ||
      object.spec.parent != object.metadata.name
    message: "Queue cannot be its own parent"
    reason: Invalid
    
  # Note: The following validations require external API access and cannot be implemented in CEL:
  # - Parent queue existence validation
  # - Hierarchical path conflict detection
  # - Parent queue allocation state validation  
  # - Child queue enumeration for deletion validation
  # - Resource capability vs guarantee validation against cluster state
  # 
  # These validations should be moved to:
  # 1. Controller-based validation during reconciliation
  # 2. OPA Gatekeeper with external data providers
  # 3. Simplified webhook that only handles complex hierarchical validation

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: queue-validation-policy-binding
  labels:
    volcano.sh/component: queue-webhook
    volcano.sh/migration: vap
spec:
  policyName: queue-validation-policy
  validationActions: [Warn] # Start with Warn for gradual migration
  matchResources:
    namespaceSelector:
      matchExpressions:
      - key: name
        operator: NotIn
        values: ["kube-system", "kube-public", "kube-node-lease"]