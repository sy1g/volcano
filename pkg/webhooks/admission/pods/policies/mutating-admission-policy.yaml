apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingAdmissionPolicy
metadata:
  name: pod-mutation-policy
  labels:
    volcano.sh/component: pod-webhook
    volcano.sh/migration: map
spec:
  failurePolicy: Fail
  matchConstraints:
  - resourceRules:
    - operations: ["CREATE"]
      apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["pods"]
  mutations:
  # 1. Resource Group - GPU Namespace
  # Add GPU node selector for pods in gpu-workloads namespace
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/nodeSelector
      value:
        node-type: "gpu"
        tier: "premium"
      condition: |
        object.metadata.namespace == "gpu-workloads" &&
        (!has(object.spec.nodeSelector) || 
         !has(object.spec.nodeSelector['node-type']))
  
  # 2. Resource Group - GPU Tolerations
  # Add GPU tolerations for pods in gpu-workloads namespace
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/tolerations
      value: |
        (has(object.spec.tolerations) ? object.spec.tolerations : []) +
        [{
          "key": "nvidia.com/gpu",
          "operator": "Exists",
          "effect": "NoSchedule"
        }]
      condition: |
        object.metadata.namespace == "gpu-workloads" &&
        !(has(object.spec.tolerations) && 
          object.spec.tolerations.exists(t, t.key == "nvidia.com/gpu"))
  
  # 3. Resource Group - High Priority Namespace
  # Add scheduler name for high-priority workloads
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/schedulerName
      value: "volcano"
      condition: |
        object.metadata.namespace == "high-priority" &&
        (!has(object.spec.schedulerName) || object.spec.schedulerName == "")
  
  # 4. Annotation-Based Resource Group
  # Add node selector based on workload-type annotation
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/nodeSelector
      value:
        workload-type: object.metadata.annotations['volcano.sh/workload-type']
      condition: |
        has(object.metadata.annotations) &&
        has(object.metadata.annotations['volcano.sh/workload-type']) &&
        object.metadata.annotations['volcano.sh/workload-type'] != "" &&
        (!has(object.spec.nodeSelector) || 
         !has(object.spec.nodeSelector['workload-type']))
  
  # 5. Memory-Intensive Workload Mutation
  # Add memory node affinity for memory-intensive annotation
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/affinity
      value:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "memory-type"
                operator: "In"
                values: ["high-memory"]
      condition: |
        has(object.metadata.annotations) &&
        has(object.metadata.annotations['volcano.sh/memory-intensive']) &&
        object.metadata.annotations['volcano.sh/memory-intensive'] == "true" &&
        !has(object.spec.affinity)
  
  # 6. Default Scheduler Assignment
  # Set volcano scheduler for pods with volcano annotations
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/schedulerName
      value: "volcano"
      condition: |
        has(object.metadata.annotations) &&
        (has(object.metadata.annotations['scheduling.volcano.sh/job-name']) ||
         has(object.metadata.annotations['scheduling.volcano.sh/task-name']) ||
         has(object.metadata.annotations['scheduling.volcano.sh/queue-name'])) &&
        (!has(object.spec.schedulerName) || object.spec.schedulerName == "")
  
  # 7. Queue-Based Priority Class
  # Set priority class based on queue annotation
  - target:
      group: ""
      version: v1
      kind: Pod
    patchType: strategic
    patches:
    - op: add
      path: /spec/priorityClassName
      value: |
        object.metadata.annotations['scheduling.volcano.sh/queue-name'] == "high-priority" ? 
        "high-priority-class" : 
        (object.metadata.annotations['scheduling.volcano.sh/queue-name'] == "gpu-queue" ? 
         "gpu-priority-class" : "default-priority-class")
      condition: |
        has(object.metadata.annotations) &&
        has(object.metadata.annotations['scheduling.volcano.sh/queue-name']) &&
        !has(object.spec.priorityClassName)

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: pod-mutation-policy-binding
  labels:
    volcano.sh/component: pod-webhook
    volcano.sh/migration: map
spec:
  policyName: pod-mutation-policy
  matchResources:
    namespaceSelector:
      matchExpressions:
      - key: name
        operator: NotIn
        values: ["kube-system", "kube-public", "kube-node-lease"]